3-1 用户登录功能设计。
MySQL数据库服务器为本地localhost；数据库名为：jsptest，编码为默认的单字节码（ISO 8859-1）；其中有一保存用户信息的数据表：jspuser，表结构与保存的用户信息见附图；MySQL用户可使用数据库的管理帐户root，密码为空；也可创建用户：jspuser1，密码：123456，并赋予相应的权限。MySQL JDBC驱动程序可从FTP下载。要求设计具有简易登录功能的JSP网页，与其它题目的网页一起发布到与数据库服务器在同一台机器的tomcat服务器上。设计时可在本地建相应的数据库，用提供的SQL文件建立数据表进行调试；具体内容与要求如下：

1. 实体JavaBean，文件名为：JspUser.java；包结构为“yzs（姓名全拼的首字母）.test.jsp”；属性与数据表jspuser中的字段一致，用于保存输入的用户信息。

2. 连接JavaBean，文件名为：DbConnection.java；包结构同上；实现与数据库连接的静态方法，方法名自定，返回Connection类型的对象。

3. 数据访问JavaBean，文件名为：JspUserDao.java；包结构同上；实现登录功能的方法，方法名自定，调用DbConnection.java的静态方法建立与数据库的连接，然后查询数据库检查用户名与密码是否正确，返回Boolean类型的值，确定是否登录成功。用户名与密码信息由方法的参数（JspUser.java类型的对象）提供。方法结束前需关闭数据库连接。

4. 登录页面，文件名为login.jsp。在页面中设计一表单，有两个文本框和一个提交按钮，用于输入用户名与密码，表单提交给login_act.jsp进行处理。表单下方，根据页面跳转流程中传递的参数，显示相应的提示信息。要求网页中有相应的标题，如：“系统登录”，文本框前有相应的标签，如：“用户名：”、“密码：”等。

5. 登录处理页面login_act.jsp，将login.jsp表单中用户输入的信息赋予JspUser Bean对象的相应属性中，判断用户名是否为空，如果为空，转回到login.jsp，在表单下方显示提示信息“Please enter the username！”或者“请输入用户名！”；用户名不为空，以JspUser Bean对象为参数调用JspUserDao对象的方法进行登录，登录不成功，转回到login.jsp，在表单下方显示提示信息“Wrong username or password ！”或者“用户名与密码错误！”；登录成功，转到下一个页面main.jsp。转向与参数传递方法自定。

6. 目标页面main.jsp，该页面只有登录以后才能显示，在未登录的情况下访问该网页，会转到login.jsp，并在表单下方显示提示信息“Please login！”或者“请登录！”；登录后该页面显示用户名及其它标题信息，如：“登录成功”；在页面适当的位置设计“注销”按钮，点击该按钮，注销用户的登录信息，并转到login.jsp页面。页面访问保护控制代码可写在页面中，也可分离出来写在一个单独的文件中，包含到页面内；包含方法用代码，或者在网站配置文件中设置自定。

网页名称是为叙述方便而预设的，与JavaBean类名一样，都可以自行定义，但JavaBean的包结构需按要求定义。网站发布时无需提交数据库文件。